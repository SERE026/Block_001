<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="${package}.${moduleName}.mapper.${className}Mapper">

	<!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="${package}.${moduleName}.entity.${className}" id="${classname}Map">
#foreach($column in $columns)
        <result property="${column.attrname}" column="${column.columnName}"/>
#end
    </resultMap>

    <sql id="baseColumns">
#foreach($column in $columns)
#**##if($velocityCount == 1)$itab$column.columnName#end##
#**##if($velocityCount != 1)$column.columnName#end ##
#* *##if($velocityCount != $columns.size()),#end##
#**##if($velocityCount%6==0 and $velocityCount != $columns.size())$newline#end##
#**##if($velocityCount%6== 0)$itab#end##
#end
$newline
    </sql>

    <sql id="whereCondition">
        <where>
#foreach($column in $columns)
#if($column.columnName != $pk.columnName)
          <if test="$column.attrname != null #if($column.attrType == 'String' ) and $column.attrname != '' #end ">and $column.columnName = #{$column.attrname}</if>
#end
#end
        </where>
    </sql>

    <sql id="updateColumn">
        <trim prefix="SET" suffixOverrides=",">
#foreach($column in $columns)
#if($column.columnName != $pk.columnName)
            <if test="$column.attrname != null #if($column.attrType == 'String' ) and $column.attrname != '' #end ">$column.columnName = #{$column.attrname},</if>
#end
#end
        </trim>

    </sql>

    <insert id="insert" parameterType="${package}.${moduleName}.entity.${className}">
        insert into ${tableName}
        (<include refid="baseColumns"/>)
        values
        (
#foreach($column in $columns)
#**##if($velocityCount == 1)$itab$itab#{$column.attrname}#end##
#**##if($velocityCount != 1)#{$column.attrname}#end ##
#* *##if($velocityCount != $columns.size()),#end##
#**##if($velocityCount%6==0 and $velocityCount != $columns.size())$newline#end##
#**##if($velocityCount%6== 0)$itab$itab#end##
#end
$newline
        )
    </insert>

    <insert id="insertBatch" parameterType="${package}.${moduleName}.entity.${className}">
        insert into ${tableName}
        (<include refid="baseColumns"/>)
        values
        <foreach collection="list" item="item" separator=",">
        (
#foreach($column in $columns)
#**##if($velocityCount == 1)$itab$itab#{item.$column.attrname}#end##
#**##if($velocityCount != 1)#{item.$column.attrname}#end ##
#* *##if($velocityCount != $columns.size()),#end##
#**##if($velocityCount%6==0 and $velocityCount != $columns.size())$newline#end##
#**##if($velocityCount%6== 0)$itab$itab#end##
#end
$newline
        )
        </foreach>
    </insert>

    <select id="selectById" resultMap="${classname}Map">
        select
        <include refid="baseColumns"/>
        from ${tableName} where ${pk.columnName}=#{${pk.attrname}}
    </select>

    <select id="listByCondition" resultMap="${classname}Map" parameterType="${package}.${moduleName}.entity.${className}">
        select
        <include refid="baseColumns"/>
        from ${tableName}
        <include refid="whereCondition"/>
        order by ${pk.columnName} desc
    </select>

    <update id="updateById" parameterType="${package}.${moduleName}.entity.${className}">
        update ${tableName}
        <include refid="updateColumn"/>
        where ${pk.columnName} = #{${pk.attrname}}
    </update>
    <update id="updateBatchByIds" parameterType="java.util.List">
        update ${tableName}
        <trim prefix="set" suffixOverrides=",">
#foreach($column in $columns)
#if($column.columnName != $pk.columnName)
            <trim prefix="$column.columnName = case" suffix="end,">
                <foreach collection="list" item="item" index="index">
                    <if test="item.$column.attrname !=null #if($column.attrType == 'String' ) and item.$column.attrname != '' #end ">
                        when $pk.columnName=#{item.$pk.attrname} then #{item.$column.attrname}
                    </if>
                </foreach>
            </trim>
#end
#end
        </trim>
        where $pk.columnName in
        <foreach collection="list" index="index" item="item" separator="," open="(" close=")">
            #{item.$pk.attrname}
        </foreach>
    </update>
</mapper>